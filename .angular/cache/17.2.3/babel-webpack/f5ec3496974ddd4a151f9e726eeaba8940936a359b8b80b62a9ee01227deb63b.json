{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { HostService } from 'app/service/bhaki-service';\nimport { NotificationService } from 'app/service/notificationService';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/service/bhaki-service\";\nimport * as i2 from \"app/service/notificationService\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nfunction BranchesEditComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n  }\n}\nfunction BranchesEditComponent_div_3_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵlistener(\"click\", function BranchesEditComponent_div_3_mat_option_14_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const branch_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.validateBranchSelection(branch_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const branch_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", branch_r3.name);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(branch_r3.name);\n  }\n}\nfunction BranchesEditComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"div\", 7)(3, \"div\", 8)(4, \"h4\", 9);\n    i0.ɵɵtext(5, \"Edit Branch\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 10)(7, \"form\", 11)(8, \"div\", 5)(9, \"div\", 12)(10, \"mat-form-field\", 13)(11, \"mat-label\");\n    i0.ɵɵtext(12, \"Select Branch \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 14);\n    i0.ɵɵtemplate(14, BranchesEditComponent_div_3_mat_option_14_Template, 2, 2, \"mat-option\", 15);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"div\", 12)(17, \"mat-form-field\", 13);\n    i0.ɵɵelement(18, \"input\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 12)(20, \"mat-form-field\", 13);\n    i0.ɵɵelement(21, \"input\", 17);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function BranchesEditComponent_div_3_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.Update());\n    });\n    i0.ɵɵtext(23, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(24, \"div\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"div\", 7)(26, \"div\", 8)(27, \"h4\", 9);\n    i0.ɵɵtext(28, \"Add Branch\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 10)(30, \"form\", 11)(31, \"div\", 5)(32, \"div\", 12)(33, \"mat-form-field\", 13);\n    i0.ɵɵelement(34, \"input\", 20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"div\", 12)(36, \"mat-form-field\", 13);\n    i0.ɵɵelement(37, \"input\", 21);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(38, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function BranchesEditComponent_div_3_Template_button_click_38_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.Save());\n    });\n    i0.ɵɵtext(39, \"Save\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"div\", 19);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.branchForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.Branch);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.fields.name)(\"id\", ctx_r1.fields.name)(\"value\", ctx_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.fields.description)(\"id\", ctx_r1.fields.description)(\"value\", ctx_r1.description);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.branchForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.fields.name)(\"id\", ctx_r1.fields.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", ctx_r1.fields.description)(\"id\", ctx_r1.fields.description);\n  }\n}\nconst form = new FormGroup({\n  name: new FormControl({\n    value: '',\n    disabled: false\n  }, [Validators.required]),\n  description: new FormControl({\n    value: '',\n    disabled: false\n  }, [Validators.required])\n});\nexport let BranchesEditComponent = /*#__PURE__*/(() => {\n  class BranchesEditComponent {\n    constructor(bhakiService, notify) {\n      this.bhakiService = bhakiService;\n      this.notify = notify;\n      this.showResults = false;\n      this.name = '';\n      this.description = '';\n      this.price = '';\n      this.Branch = [];\n      this.hideSpinner = true;\n      this.showSpinner = new BehaviorSubject(false);\n      this.fields = {\n        name: 'name',\n        description: 'description'\n      };\n      this.branchForm = form;\n      this.getBranches();\n    }\n    getBranches() {\n      this.showSpinner.next(true);\n      this.bhakiService.getBranches().subscribe({\n        next: res => {\n          this.showSpinner.next(false);\n          this.Branch = res;\n        },\n        error: err => {\n          this.showSpinner.next(false);\n          console.log(err);\n        }\n      });\n    }\n    Save() {\n      if (!this.branchForm.valid) {\n        return;\n      }\n      const branch = {\n        name: this.branchForm.value.name,\n        description: this.branchForm.value.description,\n        price: 0\n      };\n      this.showSpinner.next(true);\n      this.bhakiService.addBranch(branch).subscribe({\n        next: res => {\n          this.showSpinner.next(false);\n          this.notify.showNotification('bottom', 'center', 'Branch has been successfully added', 'success');\n          window.location.reload();\n        },\n        error: err => {\n          this.showSpinner.next(false);\n          console.log(err);\n        }\n      });\n    }\n    ngOnInit() {\n      this.showSpinner.subscribe(res => {\n        this.hideSpinner = res;\n      });\n    }\n    validateBranchSelection(branch) {\n      this.selectedBranch = branch;\n      this.name = branch.name;\n      this.description = branch.description;\n      this.price = branch.price;\n    }\n    search() {\n      console.log('searching');\n      this.showResults = true;\n    }\n    Update() {\n      if (this.name === '' || this.description === '') {\n        this.notify.showNotification('bottom', 'center', 'Please check your details', 'danger');\n      } else {\n        if (this.branchForm.value.name != '' && this.branchForm.value.name != null && this.branchForm.value.name != undefined) {\n          this.selectedBranch.name = this.branchForm.value.name;\n        } else {\n          this.selectedBranch.name = this.name;\n        }\n        if (this.branchForm.value.description != '' && this.branchForm.value.description != null && this.branchForm.value.description != undefined) {\n          this.selectedBranch.description = this.branchForm.value.description;\n        } else {\n          this.selectedBranch.description = this.description;\n        }\n        this.showSpinner.next(true);\n        this.bhakiService.updateBranch(this.selectedBranch).subscribe({\n          next: res => {\n            this.showSpinner.next(false);\n            this.notify.showNotification('bottom', 'center', 'Branch has been successfully updated', 'success');\n            window.location.reload();\n          },\n          error: err => {\n            this.showSpinner.next(false);\n            console.log(err);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function BranchesEditComponent_Factory(t) {\n      return new (t || BranchesEditComponent)(i0.ɵɵdirectiveInject(i1.HostService), i0.ɵɵdirectiveInject(i2.NotificationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BranchesEditComponent,\n      selectors: [[\"app-branch-edit\"]],\n      decls: 4,\n      vars: 2,\n      consts: [[1, \"main-content\"], [1, \"container-fluid\"], [\"class\", \"loader\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"loader\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\"], [1, \"card-header\", \"card-header-danger\"], [1, \"card-title\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"col-md-6\"], [1, \"example-full-width\"], [\"required\", \"\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"type\", \"text\", \"required\", \"\", 3, \"formControlName\", \"id\", \"value\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"type\", \"text\", \"required\", \"\", 3, \"formControlName\", \"id\", \"value\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", 1, \"btn\", \"btn-info\", \"pull-right\", \"button\", 3, \"click\"], [1, \"clearfix\"], [\"matInput\", \"\", \"placeholder\", \"Name\", \"type\", \"text\", \"required\", \"\", 3, \"formControlName\", \"id\"], [\"matInput\", \"\", \"placeholder\", \"Description\", \"type\", \"text\", \"required\", \"\", 3, \"formControlName\", \"id\"], [3, \"value\", \"click\"]],\n      template: function BranchesEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, BranchesEditComponent_div_2_Template, 1, 0, \"div\", 2)(3, BranchesEditComponent_div_3_Template, 41, 13, \"div\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.hideSpinner);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.hideSpinner);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName, i5.MatButton, i6.MatFormField, i6.MatLabel, i7.MatInput, i8.MatSelect, i9.MatOption],\n      styles: [\".navbar-form[_ngcontent-%COMP%]{max-width:450px}.loader[_ngcontent-%COMP%], .loader[_ngcontent-%COMP%]:before, .loader[_ngcontent-%COMP%]:after{background:#000;animation:_ngcontent-%COMP%_load1 1s infinite ease-in-out;width:1em;height:4em}.loader[_ngcontent-%COMP%]{color:#000;text-indent:-9999em;margin:17rem auto;position:relative;font-size:11px;transform:translateZ(0);animation-delay:-.16s}.loader[_ngcontent-%COMP%]:before, .loader[_ngcontent-%COMP%]:after{position:absolute;top:0;content:\\\"\\\"}.loader[_ngcontent-%COMP%]:before{left:-1.5em;animation-delay:-.32s}.loader[_ngcontent-%COMP%]:after{left:1.5em}@keyframes _ngcontent-%COMP%_load1{0%,80%,to{box-shadow:0 0;height:4em}40%{box-shadow:0 -2em;height:5em}}\"]\n    });\n  }\n  return BranchesEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}