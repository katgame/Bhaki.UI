{"ast":null,"code":"import { Overlay } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/overlay\";\nexport let SpinnerOverlayService = /*#__PURE__*/(() => {\n  class SpinnerOverlayService {\n    constructor(overlay) {\n      this.overlay = overlay;\n      this.overlayRef = null;\n    }\n    show(message = '') {\n      // Returns an OverlayRef (which is a PortalHost)\n      if (!this.overlayRef) {\n        this.overlayRef = this.overlay.create();\n      }\n      // Create ComponentPortal that can be attached to a PortalHost\n      const spinnerOverlayPortal = new ComponentPortal(SpinnerOverlayComponent);\n      const component = this.overlayRef.attach(spinnerOverlayPortal); // Attach ComponentPortal to PortalHost\n    }\n    hide() {\n      if (!!this.overlayRef) {\n        this.overlayRef.detach();\n      }\n    }\n    static #_ = this.ɵfac = function SpinnerOverlayService_Factory(t) {\n      return new (t || SpinnerOverlayService)(i0.ɵɵinject(i1.Overlay));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SpinnerOverlayService,\n      factory: SpinnerOverlayService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SpinnerOverlayService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}