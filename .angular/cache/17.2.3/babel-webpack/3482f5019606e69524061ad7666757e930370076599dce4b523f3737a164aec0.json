{"ast":null,"code":"import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst TOKEN_KEY = 'auth-token'; //global variable for the storage name for our authentication token\nconst USER_KEY = 'auth-user'; //global variable for the storage name for our authenticated user\nexport let TokenStorageService = /*#__PURE__*/(() => {\n  class TokenStorageService {\n    constructor(router) {\n      this.router = router;\n    }\n    //logging out the user and clearing the stored session\n    logOut() {\n      window.sessionStorage.clear();\n      this.router.navigate(['/login-form']);\n    }\n    //saving the authentication token in the session storage\n    saveToken(token) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    //get the stored authentication token from the session storage\n    getToken() {\n      return sessionStorage.getItem(TOKEN_KEY);\n    }\n    //saving the authenticated user in the session storage\n    saveUser(user) {\n      window.sessionStorage.removeItem(USER_KEY);\n      window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n    }\n    //get the stored authenticated user from the session storage\n    getUser() {\n      return JSON.parse(sessionStorage.getItem(USER_KEY));\n    }\n    static #_ = this.ɵfac = function TokenStorageService_Factory(t) {\n      return new (t || TokenStorageService)(i0.ɵɵinject(i1.Router));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenStorageService,\n      factory: TokenStorageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TokenStorageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}