{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n};\nexport let HostService = /*#__PURE__*/(() => {\n  class HostService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.showSpinner = new BehaviorSubject(false);\n      this.hostService = environment.bhakiApi;\n    }\n    //HOst Session\n    createRegitration(request) {\n      this.showSpinner.next(true);\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.post(this.hostService + 'api/Registration/add-registration', request, httpOptions);\n    }\n    getBranches() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Branch/get-all-branches', httpOptions);\n    }\n    getRegistrationDetails(registrationNumber) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-registration-details/' + registrationNumber, httpOptions);\n    }\n    addBranch(branch) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.post(this.hostService + 'api/Branch/add-branch', branch, httpOptions);\n    }\n    updateBranch(branch) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.put(this.hostService + 'api/Branch/update-branch', branch, httpOptions);\n    }\n    getBranchesForDashBoard() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Branch/get-all-branches-for-report', httpOptions);\n    }\n    getDashBoard() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-dashboard', httpOptions);\n    }\n    registerUser(userInfo) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.post(this.hostService + 'api/Authentication/register-user', userInfo, httpOptions);\n    }\n    deleteUser(userId) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.delete(this.hostService + 'api/Authentication/delete-user/' + userId, httpOptions);\n    }\n    enableUser(userId) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.put(this.hostService + 'api/Authentication/enable-user/' + userId, httpOptions);\n    }\n    getUserRoles() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Authentication/get-user-roles', httpOptions);\n    }\n    getAllUsers() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Authentication/all-user', httpOptions);\n    }\n    getBranchRegistrationsByRangeAndBranch(startdate, enddate, branchId) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-all-registrations-by-date-branchId/' + startdate + '/' + enddate + '/' + branchId, httpOptions);\n    }\n    getAllRegistrations() {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-all-registrations', httpOptions);\n    }\n    getAllRegistrationsByBranch(branchId) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-all-registrations-by-branch-id/' + branchId, httpOptions);\n    }\n    getAllRegistrationsByRange(start, end) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Registration/get-all-registrations-by-date/{start}/{end}', httpOptions);\n    }\n    getCourses(branchId) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.get(this.hostService + 'api/Course/get-all-courses/' + branchId, httpOptions);\n    }\n    addCourse(course) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.post(this.hostService + 'api/Course/add-course', course, httpOptions);\n    }\n    updateCourses(course) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.put(this.hostService + 'api/Course/update-course', course, httpOptions);\n    }\n    login(credentials) {\n      const headers = {\n        ['Access-Control-Allow-Origin']: '*'\n      };\n      return this.httpClient.post(this.hostService + 'api/Authentication/login-user', {\n        email: credentials.username,\n        password: credentials.password\n      }, httpOptions);\n    }\n    static #_ = this.ɵfac = function HostService_Factory(t) {\n      return new (t || HostService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HostService,\n      factory: HostService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return HostService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}